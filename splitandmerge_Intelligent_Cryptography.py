import random as rn
a = rn.getrandbits(7)
b = rn.getrandbits(5)
c = rn.getrandbits(5)


def encrypt(x, y, z):
    print('\033[1m' + 'Intelligent Cryptography Algorithm' + '\033[0m')
    print("Starting the Encryption and Decryption Process")
    print()
    a1 = bin(x)
    b1 = bin(y)
    c1 = bin(z)
    print('The Original Message is: ', x)
    print('The Binary Value of Original Message is: ', a1)
    print('The Generated Random Value is: ', y)
    print('The Key value is: ', c1)
    r = int(a1, 2) - int(b1, 2)
    r1 = bin(r)
    print('After Subtracting D-C: ', r1)
    print('Value After Subtracting D-C: ', r)
    print()
    print('\033[1m' + '..Now Doing Splitting and Encryption..' + '\033[0m')
    print('Applying XOR Operation')
    d = r ^ int(c1, 2)
    d1 = bin(d)
    print('After Applying XOR Operation R XOR K: ', d1)
    print('Value After Applying R XOR K: ', d)
    e = int(b1, 2) ^ int(c1, 2)
    e1 = bin(e)
    print('After Applying XOR Operation C XOR K: ', e1)
    print('Value after applying C XOR K: ', e)
    s = str(input("do you want to decrypt [y/n]?"))
    if s.lower() == "y":
        print()
        print('\033[1m' + '..Starting Merging and Decryption..' + '\033[0m')
        de = e ^ int(c1, 2)
        de1 = bin(de)
        print('After Applying XOR Operation EN XOR K: ', de1)
        print('Value after applying EN XOR K: ', de)
        dd = d ^ int(c1, 2)
        dd1 = bin(dd)
        print('After applying XOR Operation EN1 XOR K: ', dd1)
        print('Value After applying EN1 XOR K: ', dd)
        dc = de + dd
        dc1 = bin(dc)
        print('After Adding DE + DE1: ', dc1)
        print('Value after adding DE + DE1 is: ', dc)
        print()
        print('The Binary Value of Decrypted Message is: ', dc1)
        print('The value of Decrypted Message is: ', dc)
    else:
        print(f'encrypted message: A--{d}-{d1}  B--{e}-{e1}')
    print('NOTE: Here all the values are automatically generated')


encrypt(a, b, c)
